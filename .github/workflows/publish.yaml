name: Publish
on:
  push:
    tags: '*'

permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  issues: write
  discussions: read
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: read
  statuses: write

jobs:
  publish-docker-image:
    name: Publish Docker image
    strategy:
      matrix:
        node-version: [16.17.0]
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Set prod env
        run: mv apps/cugetreg-web/.env.prod apps/cugetreg-web/.env

      - name: Extract git tag
        run: TAG="${{ github.ref_name }}" ./tools/extract-git-tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build Docker images
        run: |
          npx nx run ${{ env.APP }}:docker-build

      - name: Tag and push Docker images
        run: |
          docker image tag ${{ env.APP }} ghcr.io/tithanayut/${{ env.APP }}:${{ env.VERSION }}
          docker push ghcr.io/tithanayut/${{ env.APP }}:${{ env.VERSION }}
